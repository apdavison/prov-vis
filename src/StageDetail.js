import React from 'react';
//import { makeStyles } from '@material-ui/core/styles';
import Button from '@material-ui/core/Button';
import Dialog from '@material-ui/core/Dialog';
import DialogActions from '@material-ui/core/DialogActions';
import DialogContent from '@material-ui/core/DialogContent';
import DialogContentText from '@material-ui/core/DialogContentText';
import DialogTitle from '@material-ui/core/DialogTitle';
import Typography from '@material-ui/core/Typography';
import Paper from '@material-ui/core/Paper';

// const useStyles = makeStyles((theme) => ({
//     form: {
//         display: 'flex',
//         flexDirection: 'column',
//         margin: 'auto',
//         width: 'fit-content',
//     },
//     formControl: {
//         marginTop: theme.spacing(2),
//         minWidth: 120,
//     },
//     formControlLabel: {
//         marginTop: theme.spacing(1),
//     },
// }));

function displayType(type_identifier) {
    //const parts = type_identifier.filter(name => !name.includes("Entity"));
    // assume parts.length == 1
    //return parts[0].split(":")[1];
    return type_identifier
}

export default function StageDetail(props) {
    //const classes = useStyles();;

    const handleClose = () => {
        props.onClose();
    };
    //console.log("Stage detail:");
    //console.log(props.item);
    if (props.item.code) {
        return (
            <React.Fragment>
                <Dialog
                    maxWidth="lg"
                    open={props.open}
                    onClose={handleClose}
                >
                    <DialogTitle>{displayType(props.item.type)}</DialogTitle>
                    <DialogContent>
                        <DialogContentText>
                            <p><b>Generated by   </b>{props.item.attributedTo} <b>on</b> {props.item.timestamp}</p>
                            <p>{props.item.label}</p>
                            <p>{props.item.description}</p>
                            <Typography variant="h6">Code</Typography>
                            <p>Main script: <a href={props.item.code.location}>{props.item.code.name}</a></p>
                            <p>Programming language: {props.item.code.format}</p>
                            <p>Licence: {props.item.code.license}</p>
                            <Typography variant="h6">Output</Typography>
                            {props.item.output.location}
                            {props.item.output.description}
                        </DialogContentText>
                    </DialogContent>
                    <DialogActions>
                        <Button onClick={handleClose} color="primary">
                            Close
                        </Button>
                    </DialogActions>
                </Dialog>
            </React.Fragment>
        );
    } else {
        return "";
    }
}
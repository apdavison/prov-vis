import React from 'react';
import { makeStyles } from '@material-ui/core/styles';
import Typography from '@material-ui/core/Typography'
import ClassIcon from '@material-ui/icons/Class';

import positions from './positions';


const useStyles = makeStyles((theme) => ({
  objectInfo: {
    position: 'absolute',
    left: '0px',
    top: positions.menuBarHeight + positions.searchBarHeight + 'px',
    width: '100%',
    height: positions.objectDetailBarHeight + 'px',
    overflow: 'auto',
    backgroundColor: "#eeeeee",
    padding: "1em"
  }
}));


function formatType(typeIdentifier) {
  return typeIdentifier.split(".")[1];
};

function DisplayGeneration(props) {
  if (props.attributedTo) {
    return <p><b>Generated by </b>{props.attributedTo.family_name}, {props.attributedTo.given_name} <b>on</b> {props.timestamp}</p>;
  } else {
    return "";
  }
}

export default function ObjectDetail(props) {
  const classes = useStyles();

  if (props.obj) {
    console.log(props.obj);
    return (
        <div className={classes.objectInfo}>
            <Typography variant="subtitle1" gutterBottom>
              <ClassIcon /> {props.obj.id}
            </Typography>
            <DisplayGeneration attributedTo={props.obj.started_by} timestamp={props.obj.stages[0].start_time} />
            <Typography variant="body1" gutterBottom>{props.obj.id}</Typography>
            <Typography variant="body2">{props.obj.description}</Typography>
            <Typography variant="caption">{props.obj.id}</Typography>
        </div>
    );
  } else {
    return <div className={classes.objectInfo}></div>
  }
}
